buildscript {
    ext {
        springBootVer = "1.3.0.RELEASE"
        lombokVer = "1.16.6"
    }
    repositories { jcenter() }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVer}"
    }
}

group "com.daggerok"
version "1.0.0"

apply plugin: "java"
apply plugin: "idea"
apply plugin: "spring-boot"

jar {
    baseName = "blog"
    version = "1.0.0"
}

sourceCompatibility = 1.8
targetCompatibility = sourceCompatibility

repositories { jcenter() }

dependencies {
    def tomcat = "org.springframework.boot:spring-boot-starter-tomcat",
        lombok = "org.projectlombok:lombok:${lombokVer}"

    compile "org.springframework.boot:spring-boot-starter",
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-hateoas",
            "org.springframework.boot:spring-boot-starter-data-rest",
            "org.springframework.boot:spring-boot-starter-data-mongodb",
            "de.flapdoodle.embed:de.flapdoodle.embed.mongo",
            // spring boot metrics and maintain
            "org.springframework.boot:spring-boot-starter-security",
            "org.springframework.boot:spring-boot-starter-actuator",
            "org.springframework.boot:spring-boot-starter-remote-shell",
            // java 8 jsr310 api for at
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.6.3",
            // code gen
            "${lombok}"

    runtime "${lombok}",
            "${tomcat}"

    testRuntime "${lombok}",
                "${tomcat}"

    testCompile "${lombok}",
                "org.springframework.boot:spring-boot-starter-test"/*,
                "org.springframework.restdocs:spring-restdocs-mockmvc:1.0.0.RC1"*/
}

import org.apache.tools.ant.taskdefs.condition.Os

task www(type: Exec) {
    workingDir "${project.projectDir}/www"
    ignoreExitValue = false

    def scriptName = "build"
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine "cmd", "/c", "${scriptName}.bat"
    } else {
        commandLine "bash", "-x", "${scriptName}.sh"
    }
}

build.dependsOn www
build.shouldRunAfter www
www.shouldRunAfter clean

// heroku:
task wrapper(type: Wrapper) { gradleVersion = "2.6" }
task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into project.rootDir
    rename {
        "app.jar"
    }
}
stage.mustRunAfter(clean)
clean << { project.file("app.jar").delete() }
