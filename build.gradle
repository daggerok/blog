buildscript {
    repositories {
        repositories {
            maven {
                url "https://plugins.gradle.org/m2/"
            }
        }
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVer}"
        classpath "com.github.node-gradle:gradle-node-plugin:${nodeGradlePluginVer}"
    }
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: "spring-boot"
apply plugin: "application"
apply plugin: "com.github.node-gradle.node"

jar { baseName = "blog" }

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories { jcenter() }

dependencies {
    def tomcat = "org.springframework.boot:spring-boot-starter-tomcat",
        lombok = "org.projectlombok:lombok:${lombokVer}"

    compile "org.springframework.boot:spring-boot-starter",
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-hateoas",
            "org.springframework.boot:spring-boot-starter-data-rest",
            "org.springframework.boot:spring-boot-starter-data-mongodb",
            "de.flapdoodle.embed:de.flapdoodle.embed.mongo",
            // spring boot metrics and maintain
            "org.springframework.boot:spring-boot-starter-security",
            "org.springframework.boot:spring-boot-starter-actuator",
            "org.springframework.boot:spring-boot-starter-remote-shell",
            // java 8 jsr310 api for at
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVer}",
            // utils
            "org.apache.commons:commons-lang3:${commonsLang3Ver}",
            // code gen
            "${lombok}"

    testCompile "${lombok}", "org.springframework.boot:spring-boot-starter-test"
}

node {
    download = true
    nodeModulesDir = projectDir
    version = "${projectNodeVersion}"
    npmVersion = "${projectNpmVersion}"
}

task wrapper(type: Wrapper) { gradleVersion = '2.10' }
task stage { dependsOn build }

// profiles support: gradle prod bootRun
task prod << { bootRun { systemProperty "spring.profiles.active", "prod" } }
task dev << { bootRun { systemProperty "spring.profiles.active", "dev" } }

build.dependsOn npm_run_gulp
build.shouldRunAfter npm_run_gulp
npm_run_gulp.shouldRunAfter clean

defaultTasks "clean", "build"
